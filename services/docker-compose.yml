
version: '3.9'

volumes:
  authdb_volume:
  userdb_volume:
  chatdb_volume:
  rabbitmq_volume:
  redis_volume:

x-db-driver-config: &db-driver
  driver: bridge

networks:
  auth-net:
    <<: *db-driver
  user-net:
    <<: *db-driver
  chat-net:
    <<: *db-driver
  global:
    driver: bridge

x-auth-net: &auth-net auth-net
x-user-net: &user-net user-net
x-chat-net: &chat-net chat-net
x-service-net: &service-net global

x-mssql-config: &mssql
  image: mcr.microsoft.com/mssql/server:2019-CU3-ubuntu-18.04
  environment:
    MSSQL_PID: Developer
    ACCEPT_EULA: 'Y'
    SA_PASSWORD: ${PASSWORD:?password not set}

services:
  #auth:
    #build: "./auth/src/AuthService.Web/"
    #networks:
      #- *auth-net
      #- *service-net
  authdb:
    <<: *mssql
    ports:
      - 8005:1433
    volumes:
      - "authdb_volume:/var/opt/mssql"
    networks:
      - *auth-net
  #user:
    #build: "./user/src/UserService.Web/"
    #networks:
      #- *user-net
      #- *service-net
#  userdb:
#    <<: *mssql
#    ports:
#      - 8006:1433
#    volumes:
#      - "userdb_volume:/var/opt/mssql"
#    networks:
#      - *user-net
  #chat:
    #build: "./chat/src/ChatService.Web/"
    #networks:
      #- *chat-net
      #- *service-net
#  chatdb:
#    <<: *mssql
#    ports:
#      - "8007-8012:1433" #workaround for replicas still not working
#    volumes:
#      - "chatdb_volume:/var/opt/mssql"
#    networks:
#      - *chat-net
  rabbitmq: 
    image: rabbitmq:3.9-management
    #environment:
    #  - RABBITMQ_DEFAULT_USER=user
    #  - RABBITMQ_DEFAULT_PASS=password
    ports:
      - 9000:5672
      - 9001:15672
    volumes:
      - "rabbitmq_volume:/var/lib/rabbitmq"
    networks:
      - *service-net
  redis:
    image: redis:6.2
    ports:
      - 9002:6379
    volumes:
      - "redis_volume:/data"
    networks:
      - *service-net
